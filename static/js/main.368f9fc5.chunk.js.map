{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","key","setKey","keyEventHandler","event","useEffect","document","addEventListener","removeEventListener","className","ReactDOM","render","getElementById"],"mappings":"sLAEaA,EAAgB,WAC3B,MAAsBC,mBAAwB,MAA9C,mBAAOC,EAAP,KAAYC,EAAZ,KAEMC,EAAkB,SAACC,GACvBF,EAAOE,EAAMH,MAWf,OARAI,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASJ,GAE5B,WACLG,SAASE,oBAAoB,QAASL,MAEvC,IAGD,qBAAKM,UAAU,MAAf,SACGR,EACC,mBAAGQ,UAAU,eAAb,4CAAyDR,EAAzD,OAEA,mBAAGQ,UAAU,cAAb,wC,MCjBRC,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.368f9fc5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [key, setKey] = useState<string | null>(null);\n\n  const keyEventHandler = (event: KeyboardEvent) => {\n    setKey(event.key);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keyup', keyEventHandler);\n\n    return () => {\n      document.removeEventListener('keyup', keyEventHandler);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {key ? (\n        <p className=\"App__message\">{`The last pressed key is [${key}]`}</p>\n      ) : (\n        <p className=\"App_message\">Nothing was pressed yet</p>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}